name: Build and Release Multi-Architecture Docker Images

on:
  push:
    tags:
      - 'v*'
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: docker.io
  IMAGE_NAME: cloudflare-speedtest

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/386
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  create-release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build-and-push
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            ## CloudflareSpeedTest Docker Release ${{ github.ref_name }}
            
            ### 🚀 新功能
            - 支持多架构 Docker 镜像 (amd64, arm64, armv7, 386)
            - 自动定时执行 Cloudflare 速度测试
            - 动态下载对应架构的 CloudflareSpeedTest 二进制文件
            
            ### 📦 Docker 镜像
            ```bash
            docker pull ${{ env.REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
            docker pull ${{ env.REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest
            ```
            
            ### 🏗️ 支持的架构
            - `linux/amd64` - x86_64 (Intel/AMD 64位)
            - `linux/arm64` - ARM 64位 (Apple M1, 树莓派4等)
            - `linux/arm/v7` - ARM 32位 v7 (树莓派3等)
            - `linux/386` - x86 32位
            
            ### 🔧 使用方法
            ```bash
            # 使用 docker-compose
            docker-compose up -d
            
            # 直接运行
            docker run -d \
              --name cloudflare-speedtest \
              -v $(pwd)/data:/app/data \
              -v $(pwd)/logs:/app/logs \
              -e CRON_SCHEDULE="0 */6 * * *" \
              ${{ env.REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
            ```
          draft: false
          prerelease: false
